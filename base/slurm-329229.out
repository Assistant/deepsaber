Will run tensorflow on 0,1,2,3,4,5,6,7
                                                                                                                                                
================
== TensorFlow ==
================

NVIDIA Release 18.07 (build 552349)

Container image Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.
Copyright 2017 The TensorFlow Authors.  All rights reserved.

Various files include modifications (c) NVIDIA CORPORATION.  All rights reserved.
NVIDIA modifications are covered by the license terms that apply to the underlying project or file.

----------------- Options ---------------
                  augment: 0                             
              augment_dir:                               
               batch_size: 1                             
         beat_subdivision: 16                            
                    beta1: 0.5                           
                     bias: True                          
                   blocks: 3                             	[default: 4]
          checkpoints_dir:                               
             chunk_length: 9000                          
            compute_feats: False                         
           continue_train: False                         
                 data_dir: ../AugData                    	[default: /Users/andreachatrian/Documents/Repositories/oxai/beatsaber/DataE]
             dataset_name: general_reduced_states_look_ahead	[default: song]
        dilation_channels: 512                           	[default: 32]
             display_freq: 100                           
            do_validation: False                         
             end_channels: 512                           	[default: 256]
       entropy_loss_coeff: 0.3                           	[default: 0.1]
              epoch_count: 1                             
                     eval: False                         
          experiment_name: chroma_features_likelihood_exp2	[default: experiment_name]
           fork_processes: False                         
                  gpu_ids: 0,1,2,3,4,5,6,7               	[default: -1]
               hop_length: 256                           
                init_gain: 0.02                          
                init_type: normal                        
           input_channels: 2385                          
                 is_train: True                          	[default: None]
              kernel_size: 2                             
                   layers: 7                             	[default: 10]
            learning_rate: 0.0001                        
   learning_rate_patience: 50                            
               level_diff: Expert                        
                     load: False                         
               load_epoch: latest                        
                load_iter: 0                             
              loss_weight: None                          
                       lr: 0.0002                        
           lr_decay_iters: 50                            
                lr_policy: lambda                        
                    model: wavenet                       
                   nepoch: 500                           	[default: 100]
             nepoch_decay: 500                           	[default: 100]
                  no_html: False                         
              num_classes: 2001                          
              num_filters: 15                            
              num_windows: 10                            	[default: 16]
          output_channels: 1                             
            output_length: 32                            	[default: 1]
            padded_length: 3000000                       
                    phase: train                         
               print_freq: 10                            	[default: 100]
        residual_channels: 256                           	[default: 32]
            sampling_rate: 16000                         
             save_by_iter: True                          	[default: False]
          save_epoch_freq: 50                            
         save_latest_freq: 1000                          	[default: 5000]
            skip_channels: 256                           
                     task: base                          
              time_shifts: 16                            
         update_html_freq: 100                           
           val_batch_size: 1                             
           val_epoch_freq: 10                            
                  verbose: False                         
             weight_decay: 0.0005                        
                  workers: 8                             	[default: 4]
----------------- End -------------------
model [WaveNet] was created
initialize network with normal
---------- Networks initialized -------------
[Network ] Total number of parameters : 18.316 M
-----------------------------------------------
Receptive field is 382 time points
Receptive field is 23.875 beats
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
dataset [SongDataset] was created 
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
Smol song; ignoring..
dataset [SongDataset] was created (val)
#training songs = 5537
Unexpected end of /proc/mounts line `overlay / overlay rw,relatime,lowerdir=/var/lib/docker/overlay2/l/E3LISSOAQX76D2CXFVVPKRRJ42:/var/lib/docker/overlay2/l/GCZNOQW6S4URR5TQWUJXV4TCZ2:/var/lib/docker/overlay2/l/35CNUDI5P4GQPKA6ZGMQHOBXHZ:/var/lib/docker/overlay2/l/4NC5DHMWUSKOCTQ6SSQUN5THLB:/var/lib/docker/overlay2/l/J3YZJMUHNXKXV7R77UXR6IZN3O:/var/lib/docker/overlay2/l/QPHQLDM2QPBSHHTWNIBV5TKWJK:/var/lib/docker/overlay2/l/BJ2EYVCQGAHD666TXNT53TWOIV:/var/lib/docker/overlay2/l/UH5RDQ65BPT5VMIJIYIEKHEXK7:/var/lib/docker/overlay2/l/GOMSGKLH2QFZF'
Unexpected end of /proc/mounts line `YVHB4LYO3LGAY:/var/lib/docker/overlay2/l/H7SZHNSKGLH3F2ELRDA3VGDC5Z:/var/lib/docker/overlay2/l/MIJPVLQ4ZRHAZM5KIY7RZOBZEA:/var/lib/docker/overlay2/l/ABKPYJN4F7GW4JYSKIPKV3W6EC:/var/lib/docker/overlay2/l/RKRF2Z4JMZQ2S322EWELJB6NWL:/var/lib/docker/overlay2/l/YGLS444WKJCB2U3LVLYCPIT6TX:/var/lib/docker/overlay2/l/FFSYMNYKTMTGKSUJDFA25QMHS6:/var/lib/docker/overlay2/l/WGNQDVYGYYUA6HQPBPI5UDW2BD:/var/lib/docker/overlay2/l/HJXEEK6J44NTXQ6CNHQTSAB274:/var/lib/docker/overlay2/l/BRSQFO2MLDZJRWT24BTPE3U6KA:/var/lib/do'
Unexpected end of /proc/mounts line `cker/overlay2/l/NI7LHZPQLEF7WI3PWPT3ES7245:/var/lib/docker/overlay2/l/3LW4Q3GFYTX24AKGRH4OLENW6A:/var/lib/docker/overlay2/l/FZYF4TTYOTG2MQB7R63LWKOEIU:/var/lib/docker/overlay2/l/PH6XEIXIVBS3SS2XZU5KEATW3Z:/var/lib/docker/overlay2/l/5STDH6AVUC54JKUHOOI5N657ZL:/var/lib/docker/overlay2/l/OJYJ4RYMQDRO5QKSLBD2MZR66D:/var/lib/docker/overlay2/l/563BZGHALBUOECBRTW32DZ4X3O:/var/lib/docker/overlay2/l/34E3T6FC5IO2UHWQY5QESQGAHO:/var/lib/docker/overlay2/l/TKHM3UNG6NSPEEBOFOU6ROCIUW:/var/lib/docker/overlay2/l/IBIMIWM32'
Unexpected end of /proc/mounts line `2CYBWMJVR6XLSTZBB:/var/lib/docker/overlay2/l/B6BWTEEZ7UGERRRJNQX6WGQJTT:/var/lib/docker/overlay2/l/INM2PFNQPDWYFEXPP234CXZ343:/var/lib/docker/overlay2/l/SCQZZXT4OXJZ32HFQHZOPOD5L7:/var/lib/docker/overlay2/l/HR7E3XUZJ2L7ENYMAUHPA5AWHS:/var/lib/docker/overlay2/l/MTZNLFHLJ65W3TFGN6JCJMQL6W:/var/lib/docker/overlay2/l/IS7Q6OYKLTYFUIFZEOQIXPNP47:/var/lib/docker/overlay2/l/M4QDMRQ6IXWTYDKL6BGTC7O2R2:/var/lib/docker/overlay2/l/3MTPWHQNA7AY65AONSWJESPGRE:/var/lib/docker/overlay2/l/E2ZFMEQF7U7L73B7I26K2A66GB:/var/li'
OrderedDict([('ce', 7.366971969604492)])
OrderedDict([('accuracy', 0.8968750238418579)])
OrderedDict([('ce', 0.8483246564865112)])
OrderedDict([('accuracy', 0.9281250238418579)])
OrderedDict([('ce', 1.9415761232376099)])
OrderedDict([('accuracy', 0.890625)])
OrderedDict([('ce', 0.5869331955909729)])
OrderedDict([('accuracy', 0.949999988079071)])
OrderedDict([('ce', 1.0280966758728027)])
OrderedDict([('accuracy', 0.878125011920929)])
OrderedDict([('ce', 1.169217824935913)])
OrderedDict([('accuracy', 0.8687500357627869)])
OrderedDict([('ce', 0.7700046896934509)])
OrderedDict([('accuracy', 0.925000011920929)])
OrderedDict([('ce', 0.37326550483703613)])
OrderedDict([('accuracy', 0.965624988079071)])
OrderedDict([('ce', 0.6797330975532532)])
OrderedDict([('accuracy', 0.9281250238418579)])
OrderedDict([('ce', 0.4232128858566284)])
OrderedDict([('accuracy', 0.956250011920929)])
OrderedDict([('ce', 0.4489102363586426)])
OrderedDict([('accuracy', 0.949999988079071)])
OrderedDict([('ce', 0.8957899212837219)])
OrderedDict([('accuracy', 0.890625)])
OrderedDict([('ce', 0.8012649416923523)])
OrderedDict([('accuracy', 0.8812500238418579)])
OrderedDict([('ce', 0.7487237453460693)])
OrderedDict([('accuracy', 0.921875)])
OrderedDict([('ce', 0.7960718274116516)])
OrderedDict([('accuracy', 0.8968750238418579)])
OrderedDict([('ce', 0.48992377519607544)])
OrderedDict([('accuracy', 0.9468750357627869)])
OrderedDict([('ce', 0.4860094487667084)])
OrderedDict([('accuracy', 0.949999988079071)])
OrderedDict([('ce', 0.5515205264091492)])
OrderedDict([('accuracy', 0.9375)])
OrderedDict([('ce', 0.9567029476165771)])
OrderedDict([('accuracy', 0.9000000357627869)])
OrderedDict([('ce', 0.6906080842018127)])
OrderedDict([('accuracy', 0.921875)])
OrderedDict([('ce', 0.4876536726951599)])
OrderedDict([('accuracy', 0.953125)])
OrderedDict([('ce', 0.6946024894714355)])
OrderedDict([('accuracy', 0.909375011920929)])
OrderedDict([('ce', 0.6241419315338135)])
OrderedDict([('accuracy', 0.925000011920929)])
OrderedDict([('ce', 0.9941277503967285)])
OrderedDict([('accuracy', 0.903124988079071)])
OrderedDict([('ce', 0.7647244930267334)])
OrderedDict([('accuracy', 0.8843750357627869)])
OrderedDict([('ce', 0.5041024684906006)])
OrderedDict([('accuracy', 0.9468750357627869)])
OrderedDict([('ce', 0.7236347794532776)])
OrderedDict([('accuracy', 0.9000000357627869)])
OrderedDict([('ce', 0.6314362287521362)])
OrderedDict([('accuracy', 0.9312500357627869)])
OrderedDict([('ce', 0.6897358298301697)])
OrderedDict([('accuracy', 0.903124988079071)])
OrderedDict([('ce', 0.6127232909202576)])
OrderedDict([('accuracy', 0.909375011920929)])
OrderedDict([('ce', 0.7837310433387756)])
OrderedDict([('accuracy', 0.909375011920929)])
OrderedDict([('ce', 1.1696878671646118)])
OrderedDict([('accuracy', 0.856249988079071)])
OrderedDict([('ce', 0.7785958051681519)])
OrderedDict([('accuracy', 0.921875)])
OrderedDict([('ce', 1.1777256727218628)])
OrderedDict([('accuracy', 0.875)])
OrderedDict([('ce', 0.8653551936149597)])
OrderedDict([('accuracy', 0.890625)])
OrderedDict([('ce', 0.7890238165855408)])
OrderedDict([('accuracy', 0.90625)])
OrderedDict([('ce', 0.715398371219635)])
OrderedDict([('accuracy', 0.918749988079071)])
OrderedDict([('ce', 0.5850071310997009)])
OrderedDict([('accuracy', 0.9281250238418579)])
OrderedDict([('ce', 0.9508406519889832)])
OrderedDict([('accuracy', 0.871874988079071)])
OrderedDict([('ce', 0.6788937449455261)])
OrderedDict([('accuracy', 0.925000011920929)])
OrderedDict([('ce', 0.4362066686153412)])
OrderedDict([('accuracy', 0.9593750238418579)])
OrderedDict([('ce', 1.009102702140808)])
OrderedDict([('accuracy', 0.878125011920929)])
OrderedDict([('ce', 0.3728920519351959)])
OrderedDict([('accuracy', 0.965624988079071)])
OrderedDict([('ce', 0.543304443359375)])
OrderedDict([('accuracy', 0.934374988079071)])
OrderedDict([('ce', 0.8944252133369446)])
OrderedDict([('accuracy', 0.890625)])
OrderedDict([('ce', 1.537421703338623)])
OrderedDict([('accuracy', 0.824999988079071)])
OrderedDict([('ce', 0.6058501601219177)])
OrderedDict([('accuracy', 0.925000011920929)])
OrderedDict([('ce', 0.17402610182762146)])
OrderedDict([('accuracy', 0.987500011920929)])
OrderedDict([('ce', 0.5682222843170166)])
OrderedDict([('accuracy', 0.9437500238418579)])
OrderedDict([('ce', 1.0260416269302368)])
OrderedDict([('accuracy', 0.856249988079071)])
OrderedDict([('ce', 0.4651470482349396)])
OrderedDict([('accuracy', 0.9437500238418579)])
OrderedDict([('ce', 0.5586909055709839)])
OrderedDict([('accuracy', 0.921875)])
OrderedDict([('ce', 0.5422652363777161)])
OrderedDict([('accuracy', 0.953125)])
OrderedDict([('ce', 0.4428792893886566)])
OrderedDict([('accuracy', 0.9437500238418579)])
OrderedDict([('ce', 1.085739254951477)])
OrderedDict([('accuracy', 0.887499988079071)])
OrderedDict([('ce', 0.47866031527519226)])
OrderedDict([('accuracy', 0.940625011920929)])
OrderedDict([('ce', 0.7011566162109375)])
OrderedDict([('accuracy', 0.921875)])
OrderedDict([('ce', 0.8708913922309875)])
OrderedDict([('accuracy', 0.8968750238418579)])
OrderedDict([('ce', 0.9676217436790466)])
OrderedDict([('accuracy', 0.8687500357627869)])
OrderedDict([('ce', 0.5200510025024414)])
OrderedDict([('accuracy', 0.934374988079071)])
OrderedDict([('ce', 0.5911832451820374)])
OrderedDict([('accuracy', 0.9156250357627869)])
OrderedDict([('ce', 0.4118451178073883)])
OrderedDict([('accuracy', 0.9468750357627869)])
OrderedDict([('ce', 0.9510228037834167)])
OrderedDict([('accuracy', 0.890625)])
OrderedDict([('ce', 0.6975158452987671)])
OrderedDict([('accuracy', 0.918749988079071)])
OrderedDict([('ce', 0.5614665746688843)])
OrderedDict([('accuracy', 0.9437500238418579)])
OrderedDict([('ce', 0.26444682478904724)])
OrderedDict([('accuracy', 0.9781250357627869)])
OrderedDict([('ce', 0.4229241907596588)])
OrderedDict([('accuracy', 0.9593750238418579)])
OrderedDict([('ce', 0.9711987972259521)])
OrderedDict([('accuracy', 0.890625)])
OrderedDict([('ce', 0.6331965923309326)])
OrderedDict([('accuracy', 0.918749988079071)])
OrderedDict([('ce', 0.5299288034439087)])
OrderedDict([('accuracy', 0.9437500238418579)])
OrderedDict([('ce', 0.48699232935905457)])
OrderedDict([('accuracy', 0.9468750357627869)])
OrderedDict([('ce', 0.9354212284088135)])
OrderedDict([('accuracy', 0.887499988079071)])
OrderedDict([('ce', 3.633847236633301)])
OrderedDict([('accuracy', 0.6156250238418579)])
OrderedDict([('ce', 0.8516739010810852)])
OrderedDict([('accuracy', 0.8968750238418579)])
OrderedDict([('ce', 0.5469556450843811)])
OrderedDict([('accuracy', 0.9468750357627869)])
OrderedDict([('ce', 0.5877644419670105)])
OrderedDict([('accuracy', 0.9156250357627869)])
OrderedDict([('ce', 0.5570094585418701)])
OrderedDict([('accuracy', 0.940625011920929)])
OrderedDict([('ce', 0.8652872443199158)])
OrderedDict([('accuracy', 0.8843750357627869)])
OrderedDict([('ce', 0.6352800130844116)])
OrderedDict([('accuracy', 0.925000011920929)])
OrderedDict([('ce', 0.5569350719451904)])
OrderedDict([('accuracy', 0.940625011920929)])
OrderedDict([('ce', 0.4754475951194763)])
OrderedDict([('accuracy', 0.934374988079071)])
OrderedDict([('ce', 0.7849119901657104)])
OrderedDict([('accuracy', 0.90625)])
OrderedDict([('ce', 0.37949317693710327)])
OrderedDict([('accuracy', 0.953125)])
OrderedDict([('ce', 1.0316553115844727)])
OrderedDict([('accuracy', 0.878125011920929)])
OrderedDict([('ce', 1.0187268257141113)])
OrderedDict([('accuracy', 0.859375)])
OrderedDict([('ce', 0.6750950217247009)])
OrderedDict([('accuracy', 0.90625)])
OrderedDict([('ce', 0.955866277217865)])
OrderedDict([('accuracy', 0.8843750357627869)])
OrderedDict([('ce', 0.3881493806838989)])
OrderedDict([('accuracy', 0.953125)])
OrderedDict([('ce', 0.7582911849021912)])
OrderedDict([('accuracy', 0.9125000238418579)])
OrderedDict([('ce', 0.7535347938537598)])
OrderedDict([('accuracy', 0.90625)])
OrderedDict([('ce', 0.7938426733016968)])
OrderedDict([('accuracy', 0.9125000238418579)])
OrderedDict([('ce', 0.7658319473266602)])
OrderedDict([('accuracy', 0.918749988079071)])
OrderedDict([('ce', 0.7804399728775024)])
OrderedDict([('accuracy', 0.9000000357627869)])
OrderedDict([('ce', 0.554361879825592)])
OrderedDict([('accuracy', 0.934374988079071)])
OrderedDict([('ce', 0.27988383173942566)])slurmstepd-dgj210: error: *** JOB 329229 ON dgj210 CANCELLED AT 2019-04-18T14:50:02 ***
slurmstepd-dgj210: error: task_p_post_term: rmdir(/dev/cpuset/slurm_dgj210_329229/slurm329229.4294967294_0) failed Device or resource busy
