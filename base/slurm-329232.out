Will run tensorflow on 0,1,2,3,4,5,6,7
                                                                                                                                                
================
== TensorFlow ==
================

NVIDIA Release 18.07 (build 552349)

Container image Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.
Copyright 2017 The TensorFlow Authors.  All rights reserved.

Various files include modifications (c) NVIDIA CORPORATION.  All rights reserved.
NVIDIA modifications are covered by the license terms that apply to the underlying project or file.

Traceback (most recent call last):
  File "../base/data/__init__.py", line 13, in find_dataset_using_name
    datasetlib = importlib.import_module(dataset_filename, package=task_module)
  File "/usr/lib/python3.5/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 986, in _gcd_import
  File "<frozen importlib._bootstrap>", line 969, in _find_and_load
  File "<frozen importlib._bootstrap>", line 958, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 673, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 661, in exec_module
  File "<frozen importlib._bootstrap_external>", line 767, in get_code
  File "<frozen importlib._bootstrap_external>", line 727, in source_to_code
  File "<frozen importlib._bootstrap>", line 222, in _call_with_frames_removed
  File "../base/data/general_reduced_states_look_ahead_dataset.py", line 49
    for diff in ["Hard","Expert"]
                                ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "train.py", line 49, in <module>
    opt = TrainOptions().parse()
  File "/home_directory/beatsaber/base/options/base_options.py", line 99, in parse
    opt = self.gather_options()
  File "/home_directory/beatsaber/base/options/base_options.py", line 67, in gather_options
    dataset_option_setter = data.get_option_setter(dataset_name, task_name)
  File "../base/data/__init__.py", line 43, in get_option_setter
    dataset_class = find_dataset_using_name(dataset_name, task_name)
  File "../base/data/__init__.py", line 14, in find_dataset_using_name
    except (ModuleNotFoundError, ImportError):
NameError: name 'ModuleNotFoundError' is not defined
